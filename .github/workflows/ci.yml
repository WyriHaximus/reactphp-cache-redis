name: Continuous Integration
on:
  push:
    branches:
      - 'main'
      - 'master'
      - 'refs/heads/v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
jobs:
  package-name:
    name: Package Name
    runs-on: ubuntu-latest
    needs:
      - lint-json
    outputs:
      package-name: ${{ steps.package-name.outputs.package-name }}
    steps:
      - uses: actions/checkout@v3
      - id: package-name
        run: |
          printf "::set-output name=package-name::[\"%s\"]" $(docker run --rm -v "`pwd`:`pwd`" jess/jq jq -r -c '.name' "${GITHUB_WORKSPACE}/composer.json")
  supported-versions-matrix:
    name: Supported Versions Matrix
    runs-on: ubuntu-latest
    needs:
      - lint-yaml
      - lint-json
    outputs:
      version: ${{ steps.supported-versions-matrix.outputs.version }}
      upcoming: ${{ steps.supported-versions-matrix.outputs.upcoming }}
    steps:
      - uses: actions/checkout@v3
      - id: supported-versions-matrix
        uses: WyriHaximus/github-action-composer-php-versions-in-range@v1
        with:
          upcomingReleases: true
  supported-checks-matrix:
    name: Supported Checks Matrix
    runs-on: ubuntu-latest
    needs:
      - lint-yaml
    outputs:
      check: ${{ steps.supported-checks-matrix.outputs.check }}
    steps:
      - uses: actions/checkout@v3
      - id: supported-checks-matrix
        name: Generate check
        run: |
          printf "Checks found: %s\r\n" $(make task-list-ci)
          printf "::set-output name=check::%s" $(make task-list-ci)
  can-require:
    name: Test we can require "${{ matrix.package-name }}" on PHP ${{ matrix.php }}
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        package-name: ${{ fromJson(needs.package-name.outputs.package-name) }}
    needs:
      - lint-yaml
      - lint-json
      - package-name
      - supported-versions-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/wyrihaximusnet/php:${{ matrix.php }}-nts-buster-dev-root
    steps:
      - uses: actions/checkout@v2
        with:
          path: checked_out_package
      - name: Set Up composer.json
        run: |
          echo "{\"repositories\": [{\"name\": \"${{ matrix.package-name }}\",\"type\": \"path\",\"url\": \"./checked_out_package\"}]}" > composer.json
      - name: Require package
        if: needs.supported-versions-matrix.outputs.upcoming != matrix.php
        run: |
          composer require "${{ matrix.package-name }}:dev-${GITHUB_SHA}" --no-progress --ansi --no-interaction --prefer-dist -o || composer require "${{ matrix.package-name }}:dev-${GITHUB_REF_NAME}" --no-progress --ansi --no-interaction --prefer-dist -o
  qa:
    name: Run ${{ matrix.check }} on PHP ${{ matrix.php }} with ${{ matrix.composer }} dependency preference
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: [lowest, locked, highest]
        check: ${{ fromJson(needs.supported-checks-matrix.outputs.check) }}
    needs:
      - lint-yaml
      - lint-json
      - supported-checks-matrix
      - supported-versions-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/wyrihaximusnet/php:${{ matrix.php }}-nts-buster-dev-root
    steps:
      - uses: actions/checkout@v3
      - uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.composer }}
      - name: Fetch Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
        if: matrix.check == 'backward-compatibility-check'
      - run: make ${{ matrix.check }} || true
        if: needs.supported-versions-matrix.outputs.upcoming == matrix.php
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
      - run: make ${{ matrix.check }}
        if: needs.supported-versions-matrix.outputs.upcoming != matrix.php
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
  tests-directly-on-os:
    name: Run tests on PHP ${{ matrix.php }} with ${{ matrix.composer }} dependency preference (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        composer: [lowest, locked, highest]
    needs:
      - lint-yaml
      - lint-json
      - supported-checks-matrix
      - supported-versions-matrix
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          extensions: intl, sodium
      - uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.composer }}
      - run: |
         make unit-testing-raw
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
  lint-yaml:
    name: Lint YAML
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_data: |
            extends: default
            ignore: |
              /.git/
            rules:
              line-length: disable
              document-start: disable
              truthy: disable
  lint-json:
    name: Lint JSON
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: json-syntax-check
        uses: limitusus/json-syntax-check@v1
        with:
          pattern: "\\.json$"
  check-mark:
    name: ✔️
    needs:
      - lint-yaml
      - lint-json
      - can-require
      - qa
      - tests-directly-on-os
    runs-on: ubuntu-latest
    steps:
      - run: echo "✔️"
